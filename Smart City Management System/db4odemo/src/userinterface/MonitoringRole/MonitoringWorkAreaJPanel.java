/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userinterface.MonitoringRole;

import Business.EcoSystem;
import Business.Organization.City.MonitoringOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rishabh
 */
public class MonitoringWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private MonitoringOrganization monitoringOrganization;
    private ArrayList<WorkRequest> workRequestList=null;
    private Set<String> areaSet=null;
    private static Set<WorkRequest> requestsSecondary =new HashSet<WorkRequest>();
  
    public MonitoringWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, MonitoringOrganization monitoringOrganization, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.monitoringOrganization = monitoringOrganization;

         populateTable();
    }
        public void populateTable(){

         System.err.println("Inside populate first Table");
        DefaultTableModel model = (DefaultTableModel)workRequestJTable1.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : monitoringOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[6];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getFirstName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getFirstName();
            row[3] = request.getStatus();
            row[4]= request.getRequestType();
            row[5]=request.getCategory();
            model.addRow(row);
        }
    }
     public void populateSecondTable(Set<WorkRequest> workRequests){
         
         
         System.err.println("Inside populate Second Table");

        DefaultTableModel model = (DefaultTableModel)workRequestSecondJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : workRequests){
            Object[] row = new Object[6];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getFirstName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getFirstName();
            row[3] = request.getStatus();
            row[4]= request.getRequestType();
            row[5]=request.getCategory();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        processStartBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestSecondJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(110, 89, 222));

        processStartBtn.setBackground(new java.awt.Color(51, 51, 51));
        processStartBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        processStartBtn.setText("Process");
        processStartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processStartBtnActionPerformed(evt);
            }
        });

        workRequestSecondJTable.setBackground(new java.awt.Color(51, 51, 51));
        workRequestSecondJTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        workRequestSecondJTable.setForeground(new java.awt.Color(255, 255, 255));
        workRequestSecondJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Area Name", "Sender", "Receiver", "Status", "Request Type", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestSecondJTable.setRowHeight(20);
        jScrollPane1.setViewportView(workRequestSecondJTable);

        workRequestJTable1.setBackground(new java.awt.Color(51, 51, 51));
        workRequestJTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        workRequestJTable1.setForeground(new java.awt.Color(255, 255, 255));
        workRequestJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Area Name", "Sender", "Receiver", "Status", "Request Type", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable1.setRowHeight(20);
        jScrollPane2.setViewportView(workRequestJTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1004, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(300, 300, 300)
                            .addComponent(processStartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 539, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(40, 40, 40)
                    .addComponent(processStartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(30, 30, 30)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void processStartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processStartBtnActionPerformed
        Timer timer = new Timer(125, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                processPublicRequests();
                populateSecondTable(requestsSecondary);
                populateTable();
            }
        });
        timer.start();
    }//GEN-LAST:event_processStartBtnActionPerformed
public void processPublicRequests(){
//         workRequestList=new ArrayList<>();
//         areaSet=new HashSet<>();
         for(int i=0;i<monitoringOrganization.getWorkQueue().getWorkRequestList().size();i++){
             int count=0;
             for(int j=0;j<monitoringOrganization.getWorkQueue().getWorkRequestList().size();j++){
                 if(monitoringOrganization.getWorkQueue().getWorkRequestList().get(i).equals(monitoringOrganization.getWorkQueue().getWorkRequestList().get(j))){
                     count++;
                 }
             }
              if(count>2){
                     workRequestList.add(monitoringOrganization.getWorkQueue().getWorkRequestList().get(i));
                     areaSet.add(monitoringOrganization.getWorkQueue().getWorkRequestList().get(i).getAddress().getAddressLine1());
                 }
         }
         System.out.println(workRequestList);
        
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton processStartBtn;
    private javax.swing.JTable workRequestJTable1;
    private javax.swing.JTable workRequestSecondJTable;
    // End of variables declaration//GEN-END:variables
}
