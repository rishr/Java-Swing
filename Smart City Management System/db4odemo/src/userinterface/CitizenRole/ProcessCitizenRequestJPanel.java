/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CitizenRole;

import Business.Address.Address;
import Business.EcoSystem;
import Business.Enterprise.ElectricityEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.MonitoringEnterprise;
import Business.Enterprise.WasteEnterprise;
import Business.Enterprise.WaterEnterprise;
import Business.Network.Network;
import Business.Organization.City.ElectricityOrganization;
import Business.Organization.City.MonitoringOrganization;
import Business.Organization.City.WasteOrganization;
import Business.Organization.City.WaterOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Utility.Validation;
import Business.WorkQueue.ElectricityWorkRequest;
import Business.WorkQueue.WasteWorkRequest;
import Business.WorkQueue.WaterSupplyWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author deepa
 */
public class ProcessCitizenRequestJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;

    public ProcessCitizenRequestJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        valueLabel.setText(enterprise.getName());
        serviceProviderComboBox.removeAllItems();
        populateComboBox();
        txtCity.setText(userAccount.getEmployee().getAddress().getCity().toString());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMessage = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        WorkRequestTypeComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtAddressLine1 = new javax.swing.JTextField();
        txtAddressLine2 = new javax.swing.JTextField();
        txtApartmentNo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        serviceProviderComboBox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtZipCode = new javax.swing.JTextField();
        workRequestJButton = new javax.swing.JButton();
        workRequestCategory = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(110, 89, 222));

        txtMessage.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMessage.setBorder(new javax.swing.border.MatteBorder(null));
        txtMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMessageKeyTyped(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(255, 255, 255));
        backJButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        backJButton.setText("BACK");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        valueLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        valueLabel.setText("<value>");

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Message");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Work Request Type");

        WorkRequestTypeComboBox.setBackground(new java.awt.Color(51, 51, 51));
        WorkRequestTypeComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        WorkRequestTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        WorkRequestTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WorkRequestTypeComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Address Line 1");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("City");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Apartment Number");

        txtAddressLine1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtAddressLine1.setBorder(new javax.swing.border.MatteBorder(null));

        txtAddressLine2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtAddressLine2.setBorder(new javax.swing.border.MatteBorder(null));

        txtApartmentNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtApartmentNo.setBorder(new javax.swing.border.MatteBorder(null));
        txtApartmentNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApartmentNoKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText(" Request Category");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Service Provider");

        serviceProviderComboBox.setBackground(new java.awt.Color(51, 51, 51));
        serviceProviderComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        serviceProviderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setText("Request Form");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Address Line 2");

        txtCity.setEditable(false);
        txtCity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCity.setBorder(new javax.swing.border.MatteBorder(null));
        txtCity.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Zip Code");

        txtZipCode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtZipCode.setBorder(new javax.swing.border.MatteBorder(null));
        txtZipCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipCodeActionPerformed(evt);
            }
        });
        txtZipCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtZipCodeKeyTyped(evt);
            }
        });

        workRequestJButton.setBackground(new java.awt.Color(51, 51, 51));
        workRequestJButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        workRequestJButton.setText("Submit Request");
        workRequestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workRequestJButtonActionPerformed(evt);
            }
        });

        workRequestCategory.setBackground(new java.awt.Color(51, 51, 51));
        workRequestCategory.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        workRequestCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(WorkRequestTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(txtAddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(60, 60, 60)
                        .addComponent(txtApartmentNo, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(60, 60, 60)
                        .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(workRequestJButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(63, 63, 63)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(workRequestCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(60, 60, 60)
                            .addComponent(serviceProviderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(jLabel9)))
                .addContainerGap(263, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(WorkRequestTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(workRequestCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serviceProviderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApartmentNo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(workRequestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
     private void populateComboBox() {
        WorkRequestTypeComboBox.removeAllItems();
        workRequestCategory.removeAllItems();
        for(WorkRequest.WorkRequestType workRequestType : WorkRequest.WorkRequestType.values()){
            WorkRequestTypeComboBox.addItem(workRequestType.getValue());
        }
         workRequestCategory.addItem("Personal");
         workRequestCategory.addItem("Public");
    }
     
     private Boolean checkForDuplicateRequest(WorkRequest request){
       
       for(WorkRequest workRequest:userAccount.getWorkQueue().getWorkRequestList()){
           if(!workRequest.getStatus().equalsIgnoreCase("completed") && workRequest.getAddress().getAddressLine1().equals(request.getAddress().getAddressLine1()) && workRequest.getRequestType().equals(request.getRequestType()))
           {
               return true;
           }
       }
       return false;
   }
     
    private void txtMessageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMessageKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        if(!(Character.isLetter(character) || character == KeyEvent.VK_BACK_SPACE || character == KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtMessageKeyTyped

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CitizenWorkAreaJPanel dwjp = (CitizenWorkAreaJPanel) component;
        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void WorkRequestTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WorkRequestTypeComboBoxActionPerformed
        System.out.println(WorkRequestTypeComboBox.getSelectedItem());
        serviceProviderComboBox.removeAllItems();
        if(WorkRequestTypeComboBox.getSelectedItem()!=null){
            for(Network nw: business.getNetworkList()){
                if(nw.getName().equalsIgnoreCase(userAccount.getEmployee().getAddress().getCity())){
                    for(Enterprise entp: nw.getEnterpriseDirectory().getEnterpriseList()){
                        if(WorkRequestTypeComboBox.getSelectedItem().equals(WorkRequest.WorkRequestType.ElectricityWorkRequest.getValue()))
                        {
                            if(entp.getEnterpriseType().getValue().equals("Electricity")){
                                serviceProviderComboBox.addItem(Organization.Type.Electricity.getValue());;

                            }
                        }else if(WorkRequestTypeComboBox.getSelectedItem().equals(WorkRequest.WorkRequestType.WaterSupplyWorkRequest.getValue()))
                        {
                            if(entp.getEnterpriseType().getValue().equals("Water")){

                                serviceProviderComboBox.addItem(Organization.Type.Water.getValue());

                            }
                        }else if(WorkRequestTypeComboBox.getSelectedItem().equals(WorkRequest.WorkRequestType.WasteWorkRequest.getValue()))
                        {
                            if(entp.getEnterpriseType().getValue().equals("Waste")){

                                serviceProviderComboBox.addItem(Organization.Type.Waste.getValue());

                            }
                        }

                    }
                }
            }
        }
    }//GEN-LAST:event_WorkRequestTypeComboBoxActionPerformed

    private void txtApartmentNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApartmentNoKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        if(!(Character.isDigit(character) || character == KeyEvent.VK_BACK_SPACE || character == KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtApartmentNoKeyTyped

    private void txtZipCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipCodeActionPerformed

    private void txtZipCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipCodeKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        if(!(Character.isDigit(character) || character == KeyEvent.VK_BACK_SPACE || character == KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtZipCodeKeyTyped

    private void workRequestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workRequestJButtonActionPerformed

        if(!Validation.validateTextFieldsForNonEmpty(txtAddressLine1) || !Validation.validateTextFieldsForNonEmpty(txtApartmentNo)
            || !Validation.validateTextFieldsForNonEmpty(txtMessage) || !Validation.validateTextFieldsForNonEmpty(txtZipCode)
            || txtZipCode.getText().length()!= 5){
            JOptionPane.showMessageDialog(null,"Please do not keep fields empty", "Warning", JOptionPane.INFORMATION_MESSAGE);
        } else {
            WorkRequest workRequest =  null;
            Address address = new Address();
            String message = txtMessage.getText();
            String addressLine1=txtAddressLine1.getText();
            String addressLine2=txtAddressLine2.getText();
            int zip=Integer.parseInt(txtZipCode.getText());
            int aptNumber=Integer.parseInt(txtApartmentNo.getText());
            address.setAddressLine1(addressLine1);
            address.setAddressLine2(addressLine2);
            address.setZipCode(zip);
            address.setApartmentNo(aptNumber);

            if(WorkRequestTypeComboBox.getSelectedItem().equals(WorkRequest.WorkRequestType.ElectricityWorkRequest.getValue())){
                workRequest =  new ElectricityWorkRequest();
                workRequest.setRequestType(WorkRequest.WorkRequestType.ElectricityWorkRequest.getValue());
            }
            else if(WorkRequestTypeComboBox.getSelectedItem().equals(WorkRequest.WorkRequestType.WaterSupplyWorkRequest.getValue())){
                workRequest =  new WaterSupplyWorkRequest();
                workRequest.setRequestType(WorkRequest.WorkRequestType.WaterSupplyWorkRequest.getValue());
            }
            else if(WorkRequestTypeComboBox.getSelectedItem().equals(WorkRequest.WorkRequestType.WasteWorkRequest.getValue())){
                workRequest =  new WasteWorkRequest();
                workRequest.setRequestType(WorkRequest.WorkRequestType.WasteWorkRequest.getValue());
            }
            String category=workRequestCategory.getSelectedItem().toString();
            workRequest.setMessage(message);
            workRequest.setSender(userAccount);
            workRequest.setStatus("Sent");
            workRequest.setAddress(address);
            workRequest.setCategory(category);
            Date date = new Date();
            workRequest.setRequestDate(date);
            Organization org = null;
            if(checkForDuplicateRequest(workRequest)){
                JOptionPane.showMessageDialog(null,"You have Already Submitted Similar Request Which is not completed yet. Kindly Verify Again", "Warning", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                for(Network network : business.getNetworkList()){
                    if(network.getName().equals(userAccount.getEmployee().getAddress().getCity().toString())){
                        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                            if(workRequest.getCategory().equals("Public")){
                                if(enterprise instanceof MonitoringEnterprise){
                                    workRequest.setProviderName(serviceProviderComboBox.getSelectedItem().toString());
                                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                                        if (organization instanceof MonitoringOrganization){
                                            org = organization;
                                            break;
                                        }
                                    }
                                }
                            }else if(workRequest.getCategory().equals("Personal")){
                                if(workRequest.getRequestType().equals(WorkRequest.WorkRequestType.ElectricityWorkRequest.getValue())){
                                    if(serviceProviderComboBox.getSelectedItem()== ElectricityOrganization.Type.Electricity.getValue()){
                                        if(enterprise instanceof ElectricityEnterprise){
                                            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                                                if (organization instanceof ElectricityOrganization){
                                                    org = organization;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                }else if(workRequest.getRequestType().equals(WorkRequest.WorkRequestType.WasteWorkRequest.getValue())){
                                    if(enterprise instanceof WasteEnterprise){
                                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                                            if (organization instanceof WasteOrganization){
                                                org = organization;
                                                break;
                                            }
                                        }
                                    }
                                }else if((workRequest.getRequestType().equals(WorkRequest.WorkRequestType.WaterSupplyWorkRequest.getValue()))){
                                    if(enterprise instanceof WaterEnterprise){
                                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                                            if (organization instanceof WaterOrganization){
                                                org = organization;
                                                break;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (org!=null){
                    org.getWorkQueue().getWorkRequestList().add(workRequest);
                    userAccount.getWorkQueue().getWorkRequestList().add(workRequest);
                    JOptionPane.showMessageDialog(null,"Submitted Request Successfully!", "Warning", JOptionPane.INFORMATION_MESSAGE);
                }

                //JOptionPane.showMessageDialog(null,"Submitted Request Successfully!", "Warning", JOptionPane.INFORMATION_MESSAGE);
                txtMessage.setText("");
                txtAddressLine1.setText("");
                txtAddressLine2.setText("");
                txtApartmentNo.setText("");
                txtZipCode.setText("");
            }        }
    }//GEN-LAST:event_workRequestJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox WorkRequestTypeComboBox;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox serviceProviderComboBox;
    private javax.swing.JTextField txtAddressLine1;
    private javax.swing.JTextField txtAddressLine2;
    private javax.swing.JTextField txtApartmentNo;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtZipCode;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JComboBox workRequestCategory;
    private javax.swing.JButton workRequestJButton;
    // End of variables declaration//GEN-END:variables
}
